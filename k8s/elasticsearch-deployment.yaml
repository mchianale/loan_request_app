apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\matte\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f docker-compose.yml -o k8s/
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\matte\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f docker-compose.yml -o k8s/
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: elasticsearch
    spec:
      containers:
        - env:
            - name: ELASTIC_PASSWORD
              value: b2ecc628566048608451c61b6b210ee6467edc7aefa911efafe4e4c7673f17a8
            - name: discovery.type
              value: single-node
            - name: xpack.security.enabled
              value: "true"
          image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
          livenessProbe:
            exec:
              command:
                - curl
                - -u
                - elastic:b2ecc628566048608451c61b6b210ee6467edc7aefa911efafe4e4c7673f17a8
                - -f
                - http://localhost:9200
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 10
          name: elasticsearch
          ports:
            - containerPort: 9200
              protocol: TCP
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: elasticsearch-data
      restartPolicy: Always
      volumes:
        - name: elasticsearch-data
          persistentVolumeClaim:
            claimName: elasticsearch-data
